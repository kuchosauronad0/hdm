name: publish üê≥ Docker image

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3

      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get tags
        shell: python
        run: |
          import re
          from packaging.version import parse
          version = "${{ github.ref }}".replace("refs/tags/v", "")
          image = "ghcr.io/${{ github.repository }}"
          tags = set()
          # full version
          if not version == 'refs/heads/main':
              tags.add(f"{image}:{version}")
          if version == 'refs/heads/main':
              tags.add(f"{image}:development")
          if not parse(version).is_prerelease:
              # only final and post-releases should get the tags
              # used for automatic use of latest *stable* version
              # major_version
              if not version == 'refs/heads/main':
                  major_version = re.search(r'(\d+?)\.', version).group(1)
                  tags.add(f"{image}:{major_version}")
                  # major_version.minor_version
                  major_and_minor_version = re.search(r'(\d+?\.\d+?)\.', version).group(1)
                  tags.add(f"{image}:{major_and_minor_version}")
                  tags.add(f"{image}:latest")
          tags = ",".join(sorted(list(tags)))
          print(f"::set-output name=tags::{tags}")
        id: tags

      - name: Build and push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # tag=v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.tags.outputs.tags }}
